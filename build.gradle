buildscript {
   repositories {
      jcenter()
      mavenCentral()
   }


   dependencies {
      classpath group: 'com.github.samueltbrown', name: 'gradle-cucumber-plugin', version: '+'
      classpath group: 'com.jfrog.bintray.gradle', name:'gradle-bintray-plugin', version:'+'
   }
}


apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'wrapper'
apply plugin: 'jacoco'
apply plugin: 'com.github.samueltbrown.cucumber'
apply plugin: 'com.jfrog.bintray'


wrapper {
   gradleVersion = 2.3
}

configurations {
   provided
   published
}

sourceSets {
   main {
      compileClasspath += configurations.provided
      runtimeClasspath += configurations.provided
   }
   test {
      compileClasspath += configurations.provided
      runtimeClasspath += configurations.provided
   }
   cucumber {
      compileClasspath += configurations.provided
      runtimeClasspath += configurations.provided
   }
}

repositories {
   jcenter()
}

dependencies {
   provided gradleApi()
   provided localGroovy()
   provided group: 'javax.inject', name:'javax.inject', version:'1'

   cucumberCompile group: 'info.cukes', name:'cucumber-junit', version:'1.+'
   cucumberCompile group: 'info.cukes', name:'cucumber-groovy', version:'1.+'
}

javadoc {
   classpath += configurations.provided
   failOnError false
}

task sourcesJar(type: Jar, dependsOn: classes) {
   group 'build'
   classifier = 'sources'
   from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
   group 'build'
   classifier = 'javadoc'
   from javadoc.destinationDir
}

/**
 * Add jars as artifacts, this will cause them to be built as part of assemble and will automatically be
 * included as part of the publishing mechanism
 */
artifacts {
   published sourcesJar
   published javadocJar
}
test {
   ignoreFailures = true
}

jacoco {
   toolVersion = '+'
}

idea{
   project {
      languageLevel = '1.6'
   }
   module {
      //if you love browsing Javadoc
      downloadJavadoc = true

      //and hate reading sources :)
      downloadSources = false

      scopes.PROVIDED.plus += [ configurations.provided ]
   }
}

tasks.test.dependsOn tasks.cucumber

bintray {
   user = bintrayUser
   key = bintrayApiKey
   dryRun = project.hasProperty('dryRun')
   publish = true
   configurations = ['published','archives']
   pkg {
      repo = 'maven'
      userOrg = 'ijento'
      name = 'gradle-fatjar-plugin'
      desc = 'A Gradle plugin to add a fatjar task and configurations'
      licenses = ['Apache-2.0']
      labels = ['gradle','jar','fatjar','assemble','build']
      websiteUrl = 'https://github.com/iJento/gradle-fatjar-plugin'
      issueTrackerUrl = 'https://github.com/iJento/gradle-fatjar-plugin/issues'
      vcsUrl = 'https://github.com/iJento/gradle-fatjar-plugin.git'
      version{
         attributes = ['gradle-plugin' : 'com.github.ijento.fatjar:gradle-fatjar-plugin']
         vcsTag = "v$version"
      }
   }
}

